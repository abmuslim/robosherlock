# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ noetic ]
  pull_request:
    branches: [ noetic ]

  # Allows you to run this workflow manually from the Actions tab
  #workflow_dispatch:
#name: Cache
env: 
  ROS_DISTRO: noetic
  ROS_CI_DESKTOP: "`lsb_release -cs`"
  ROS_PARALLEL_JOBS: '-j5 -l3'
  CI_SOURCE_PATH: $(pwd)
  CATKIN_OPTIONS: $CI_SOURCE_PATH/robosherlock/catkin.options
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-20.04
    #services:
     #     mongo:
      #      image: mongodb

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Cache
        id: cache
        uses: actions/cache@v2
        with:
          path: ~/.ccache
          key: ${{ runner.os }}-ccache-${{ hashFiles('hashFile.txt') }}
          restore-keys: ${{ runner.os }}-ccache
 
      - name: Install Boost
        run: |
          sudo apt update
          sudo apt install -y libicu-dev
          
      - name: Install Boost
        run: |
          sudo apt update
          sudo apt install -y libboost-all-dev

      - name: before_install
        run: |   
          sudo sh -c 'echo "deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main" > /etc/apt/sources.list.d/ros-latest.list'
          wget http://packages.ros.org/ros.key -O - | sudo apt-key add -
          sudo apt-get update -qq
          sudo apt-get install -y ros-noetic-ros-base libmongoclient-* cmake python3-catkin-pkg python3-rosdep python3-wstool python3-rosinstall python3-rosinstall-generator python3-setuptools libgtest-dev build-essential ros-noetic-catkin lcov swi-prolog --allow-downgrades
          source /opt/ros/$ROS_DISTRO/setup.bash
          sudo rosdep init
          rosdep update
          echo "source /opt/ros/noetic/setup.bash" >> ~/.bashrc
          echo "export PYTHON_EXECUTABLE=/usr/bin/python3" >> ~/.bashrc
          echo "export PYTHONPATH=$PYTHONPATH:/usr/lib/python3/dist-packages" >> ~/.bashrc
          source ~/.bashrc
          mkdir -p ~/catkin_ws/src
          cd ~/catkin_ws/src
          #catkin_init_workspace
          cd ../
          catkin_make
          source devel/setup.bash
          cd ~/catkin_ws/src
          ln -s $CI_SOURCE_PATH .
          
      - name: before_script
        run: |
          cd ~/catkin_ws
          rosdep install -y --from-paths src --ignore-src --rosdistro $ROS_DISTRO
          echo "export APR_HOME=/usr" >> ~/.bashrc
          echo "export ICU_HOME=/usr" >> ~/.bashrc
          echo "export XERCES_HOME=/usr" >> ~/.bashrc
          echo "export LD_LIBRARY_PATH=/usr/local/lib:${LD_LIBRARY_PATH}" >> ~/.bashrc
          . ~/.bashrc    
        
      - name: script
        run: |
          cd ~/catkin_ws
          source devel/setup.bash
          roscore &
          cd ~/catkin_ws
          source devel/setup.bash
          rosrun robosherlock robosherlock-test
          #catkin_test_results
      - name: after_script
        run: |
          cd ~/catkin_ws/src/robosherlock
          lcov --directory ~/catkin_ws/ --capture --output-file coverage_test.info
          lcov -a coverage_base.info -a coverage_test.info -o ~/catkin_ws/src/robosherlock/coverage_total.info
          lcov --remove coverage_total.info '/usr/*' --output-file coverage_total.info 
          lcov --extract coverage_total.info '*robosherlock*' --output-file coverage_total.info
          lcov --list coverage_total.info
          bash <(curl -s https://codecov.io/bash) -X gcov -f ~/catkin_ws/src/robosherlock/coverage_total.info || echo "Codecov did not collect coverage reports"

          
